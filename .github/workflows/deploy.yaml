name: Deploy
run-name: 'deploy: ${{ github.sha }}'
on:
  workflow_dispatch:
    inputs:
      auth_service:
        type: boolean
        required: true
        default: false
        description: Auth service
      user_service:
        type: boolean
        required: true
        default: false
        description: User service
      post_service:
        type: boolean
        required: true
        default: false
        description: Post service
      environment:
        type: choice
        description: Which server environment would you like to deploy?
        options:
          - staging
          - production
jobs:
  deploy-auth-service:
    if: inputs.auth_service == true && (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')
    uses: ./.github/workflows/wc-deploy-schema.yml
    with:
      environment: ${{ inputs.environment }}
      pre_built: true
      pre_built_cmd: |
        pnpm i
        npx nx build @pinpin/auth-service
    secrets:
      org_id: ${{ secrets.VERCEL_ORG_ID }}
      project_id: ${{ secrets.VERCEL_AUTH_SERVICE_ID }}
      token: ${{ secrets.VERCEL_TOKEN }}

  deploy-user-service:
    if: inputs.user_service == true && (github.ref == 'refs/heads/staging' || github.refs == 'refs/heads/main')
    uses: ./.github/workflows/wc-deploy-schema.yml
    with:
      environment: ${{ inputs.environment }}
      pre_built: true
      pre_built_cmd: |
        pnpm i
        npx nx build @pinpin/user-service
    secrets:
      org_id: ${{ secrets.VERCEL_ORG_ID }}
      project_id: ${{ secrets.VERCEL_USER_SERVICE_ID }}
      token: ${{ secrets.VERCEL_TOKEN }}

  deploy-post-service:
    if: inputs.post_service == true && (github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')
    uses: ./.github/workflows/wc-deploy-schema.yml
    with:
      environment: ${{ inputs.environment }}
      pre_built: true
      pre_built_cmd: |
        pnpm i
        npx nx build @pinpin/post-service
    secrets:
      org_id: ${{ secrets.VERCEL_ORG_ID }}
      project_id: ${{ secrets.VERCEL_POST_SERVICE_ID }}
      token: ${{ secrets.VERCEL_TOKEN }}